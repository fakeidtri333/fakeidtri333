
Display.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000658  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000038e  00800060  00000658  000006cc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000007  008003ee  000009e6  00000a5a  2**0
                  ALLOC
  3 .stab         00000c54  00000000  00000000  00000a5c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000911  00000000  00000000  000016b0  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	13 e0       	ldi	r17, 0x03	; 3
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e8 e5       	ldi	r30, 0x58	; 88
  68:	f6 e0       	ldi	r31, 0x06	; 6
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	ae 3e       	cpi	r26, 0xEE	; 238
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
  76:	13 e0       	ldi	r17, 0x03	; 3
  78:	ae ee       	ldi	r26, 0xEE	; 238
  7a:	b3 e0       	ldi	r27, 0x03	; 3
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a5 3f       	cpi	r26, 0xF5	; 245
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 b6 00 	call	0x16c	; 0x16c <main>
  8a:	0c 94 2a 03 	jmp	0x654	; 0x654 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__heap_end>

00000092 <printP>:
unsigned int j=0,l=0,m=0;
//char B[61]=" ";
// char A[61]=" BRiCS: BUILD ROBOT CREATE SCIENCE ";
char A[61]="#############################################";

int printP(void ){
  92:	df 93       	push	r29
  94:	cf 93       	push	r28
  96:	cd b7       	in	r28, 0x3d	; 61
  98:	de b7       	in	r29, 0x3e	; 62


for(m=0;m<56;m++){
  9a:	10 92 f4 03 	sts	0x03F4, r1
  9e:	10 92 f3 03 	sts	0x03F3, r1
  a2:	57 c0       	rjmp	.+174    	; 0x152 <printP+0xc0>

for(l=0;l<6;l++){
  a4:	10 92 f2 03 	sts	0x03F2, r1
  a8:	10 92 f1 03 	sts	0x03F1, r1
  ac:	41 c0       	rjmp	.+130    	; 0x130 <printP+0x9e>

P[7*m+l]=C[l+6*A[m]-192];
  ae:	20 91 f3 03 	lds	r18, 0x03F3
  b2:	30 91 f4 03 	lds	r19, 0x03F4
  b6:	c9 01       	movw	r24, r18
  b8:	88 0f       	add	r24, r24
  ba:	99 1f       	adc	r25, r25
  bc:	88 0f       	add	r24, r24
  be:	99 1f       	adc	r25, r25
  c0:	88 0f       	add	r24, r24
  c2:	99 1f       	adc	r25, r25
  c4:	ac 01       	movw	r20, r24
  c6:	42 1b       	sub	r20, r18
  c8:	53 0b       	sbc	r21, r19
  ca:	9a 01       	movw	r18, r20
  cc:	80 91 f1 03 	lds	r24, 0x03F1
  d0:	90 91 f2 03 	lds	r25, 0x03F2
  d4:	a9 01       	movw	r20, r18
  d6:	48 0f       	add	r20, r24
  d8:	59 1f       	adc	r21, r25
  da:	80 91 f3 03 	lds	r24, 0x03F3
  de:	90 91 f4 03 	lds	r25, 0x03F4
  e2:	fc 01       	movw	r30, r24
  e4:	e0 55       	subi	r30, 0x50	; 80
  e6:	fc 4f       	sbci	r31, 0xFC	; 252
  e8:	80 81       	ld	r24, Z
  ea:	28 2f       	mov	r18, r24
  ec:	30 e0       	ldi	r19, 0x00	; 0
  ee:	c9 01       	movw	r24, r18
  f0:	88 0f       	add	r24, r24
  f2:	99 1f       	adc	r25, r25
  f4:	82 0f       	add	r24, r18
  f6:	93 1f       	adc	r25, r19
  f8:	88 0f       	add	r24, r24
  fa:	99 1f       	adc	r25, r25
  fc:	9c 01       	movw	r18, r24
  fe:	80 91 f1 03 	lds	r24, 0x03F1
 102:	90 91 f2 03 	lds	r25, 0x03F2
 106:	82 0f       	add	r24, r18
 108:	93 1f       	adc	r25, r19
 10a:	80 5c       	subi	r24, 0xC0	; 192
 10c:	90 40       	sbci	r25, 0x00	; 0
 10e:	fc 01       	movw	r30, r24
 110:	e0 5a       	subi	r30, 0xA0	; 160
 112:	ff 4f       	sbci	r31, 0xFF	; 255
 114:	80 81       	ld	r24, Z
 116:	fa 01       	movw	r30, r20
 118:	e7 57       	subi	r30, 0x77	; 119
 11a:	fd 4f       	sbci	r31, 0xFD	; 253
 11c:	80 83       	st	Z, r24
int printP(void ){


for(m=0;m<56;m++){

for(l=0;l<6;l++){
 11e:	80 91 f1 03 	lds	r24, 0x03F1
 122:	90 91 f2 03 	lds	r25, 0x03F2
 126:	01 96       	adiw	r24, 0x01	; 1
 128:	90 93 f2 03 	sts	0x03F2, r25
 12c:	80 93 f1 03 	sts	0x03F1, r24
 130:	80 91 f1 03 	lds	r24, 0x03F1
 134:	90 91 f2 03 	lds	r25, 0x03F2
 138:	86 30       	cpi	r24, 0x06	; 6
 13a:	91 05       	cpc	r25, r1
 13c:	08 f4       	brcc	.+2      	; 0x140 <printP+0xae>
 13e:	b7 cf       	rjmp	.-146    	; 0xae <printP+0x1c>
char A[61]="#############################################";

int printP(void ){


for(m=0;m<56;m++){
 140:	80 91 f3 03 	lds	r24, 0x03F3
 144:	90 91 f4 03 	lds	r25, 0x03F4
 148:	01 96       	adiw	r24, 0x01	; 1
 14a:	90 93 f4 03 	sts	0x03F4, r25
 14e:	80 93 f3 03 	sts	0x03F3, r24
 152:	80 91 f3 03 	lds	r24, 0x03F3
 156:	90 91 f4 03 	lds	r25, 0x03F4
 15a:	88 33       	cpi	r24, 0x38	; 56
 15c:	91 05       	cpc	r25, r1
 15e:	08 f4       	brcc	.+2      	; 0x162 <printP+0xd0>
 160:	a1 cf       	rjmp	.-190    	; 0xa4 <printP+0x12>

P[7*m+l]=C[l+6*A[m]-192];

}
}
return 0;
 162:	80 e0       	ldi	r24, 0x00	; 0
 164:	90 e0       	ldi	r25, 0x00	; 0
}
 166:	cf 91       	pop	r28
 168:	df 91       	pop	r29
 16a:	08 95       	ret

0000016c <main>:



int main(void)
{
 16c:	0f 93       	push	r16
 16e:	1f 93       	push	r17
 170:	df 93       	push	r29
 172:	cf 93       	push	r28
 174:	00 d0       	rcall	.+0      	; 0x176 <main+0xa>
 176:	00 d0       	rcall	.+0      	; 0x178 <main+0xc>
 178:	00 d0       	rcall	.+0      	; 0x17a <main+0xe>
 17a:	cd b7       	in	r28, 0x3d	; 61
 17c:	de b7       	in	r29, 0x3e	; 62
int term=0,B,C;
 17e:	1e 82       	std	Y+6, r1	; 0x06
 180:	1d 82       	std	Y+5, r1	; 0x05
DDRB=255;
 182:	e7 e3       	ldi	r30, 0x37	; 55
 184:	f0 e0       	ldi	r31, 0x00	; 0
 186:	8f ef       	ldi	r24, 0xFF	; 255
 188:	80 83       	st	Z, r24
DDRC=63;
 18a:	e4 e3       	ldi	r30, 0x34	; 52
 18c:	f0 e0       	ldi	r31, 0x00	; 0
 18e:	8f e3       	ldi	r24, 0x3F	; 63
 190:	80 83       	st	Z, r24
DDRD=255;
 192:	e1 e3       	ldi	r30, 0x31	; 49
 194:	f0 e0       	ldi	r31, 0x00	; 0
 196:	8f ef       	ldi	r24, 0xFF	; 255
 198:	80 83       	st	Z, r24

printP();
 19a:	0e 94 49 00 	call	0x92	; 0x92 <printP>

while(1){



B=( B&0b01111111)|(((P[0+j]>>term)%2)<<7);
 19e:	8b 81       	ldd	r24, Y+3	; 0x03
 1a0:	9c 81       	ldd	r25, Y+4	; 0x04
 1a2:	8c 01       	movw	r16, r24
 1a4:	0f 77       	andi	r16, 0x7F	; 127
 1a6:	10 70       	andi	r17, 0x00	; 0
 1a8:	80 91 ef 03 	lds	r24, 0x03EF
 1ac:	90 91 f0 03 	lds	r25, 0x03F0
 1b0:	fc 01       	movw	r30, r24
 1b2:	e7 57       	subi	r30, 0x77	; 119
 1b4:	fd 4f       	sbci	r31, 0xFD	; 253
 1b6:	80 81       	ld	r24, Z
 1b8:	88 2f       	mov	r24, r24
 1ba:	90 e0       	ldi	r25, 0x00	; 0
 1bc:	0d 80       	ldd	r0, Y+5	; 0x05
 1be:	02 c0       	rjmp	.+4      	; 0x1c4 <main+0x58>
 1c0:	95 95       	asr	r25
 1c2:	87 95       	ror	r24
 1c4:	0a 94       	dec	r0
 1c6:	e2 f7       	brpl	.-8      	; 0x1c0 <main+0x54>
 1c8:	22 e0       	ldi	r18, 0x02	; 2
 1ca:	30 e0       	ldi	r19, 0x00	; 0
 1cc:	b9 01       	movw	r22, r18
 1ce:	0e 94 03 03 	call	0x606	; 0x606 <__divmodhi4>
 1d2:	96 95       	lsr	r25
 1d4:	98 2f       	mov	r25, r24
 1d6:	88 27       	eor	r24, r24
 1d8:	97 95       	ror	r25
 1da:	87 95       	ror	r24
 1dc:	80 2b       	or	r24, r16
 1de:	91 2b       	or	r25, r17
 1e0:	9c 83       	std	Y+4, r25	; 0x04
 1e2:	8b 83       	std	Y+3, r24	; 0x03
B=( B&0b10111111)|(((P[1+j]>>term)%2)<<6);
 1e4:	8b 81       	ldd	r24, Y+3	; 0x03
 1e6:	9c 81       	ldd	r25, Y+4	; 0x04
 1e8:	8c 01       	movw	r16, r24
 1ea:	0f 7b       	andi	r16, 0xBF	; 191
 1ec:	10 70       	andi	r17, 0x00	; 0
 1ee:	80 91 ef 03 	lds	r24, 0x03EF
 1f2:	90 91 f0 03 	lds	r25, 0x03F0
 1f6:	01 96       	adiw	r24, 0x01	; 1
 1f8:	fc 01       	movw	r30, r24
 1fa:	e7 57       	subi	r30, 0x77	; 119
 1fc:	fd 4f       	sbci	r31, 0xFD	; 253
 1fe:	80 81       	ld	r24, Z
 200:	88 2f       	mov	r24, r24
 202:	90 e0       	ldi	r25, 0x00	; 0
 204:	0d 80       	ldd	r0, Y+5	; 0x05
 206:	02 c0       	rjmp	.+4      	; 0x20c <main+0xa0>
 208:	95 95       	asr	r25
 20a:	87 95       	ror	r24
 20c:	0a 94       	dec	r0
 20e:	e2 f7       	brpl	.-8      	; 0x208 <main+0x9c>
 210:	22 e0       	ldi	r18, 0x02	; 2
 212:	30 e0       	ldi	r19, 0x00	; 0
 214:	b9 01       	movw	r22, r18
 216:	0e 94 03 03 	call	0x606	; 0x606 <__divmodhi4>
 21a:	00 24       	eor	r0, r0
 21c:	96 95       	lsr	r25
 21e:	87 95       	ror	r24
 220:	07 94       	ror	r0
 222:	96 95       	lsr	r25
 224:	87 95       	ror	r24
 226:	07 94       	ror	r0
 228:	98 2f       	mov	r25, r24
 22a:	80 2d       	mov	r24, r0
 22c:	80 2b       	or	r24, r16
 22e:	91 2b       	or	r25, r17
 230:	9c 83       	std	Y+4, r25	; 0x04
 232:	8b 83       	std	Y+3, r24	; 0x03
B=( B&0b11011111)|(((P[2+j]>>term)%2)<<5);
 234:	8b 81       	ldd	r24, Y+3	; 0x03
 236:	9c 81       	ldd	r25, Y+4	; 0x04
 238:	8c 01       	movw	r16, r24
 23a:	0f 7d       	andi	r16, 0xDF	; 223
 23c:	10 70       	andi	r17, 0x00	; 0
 23e:	80 91 ef 03 	lds	r24, 0x03EF
 242:	90 91 f0 03 	lds	r25, 0x03F0
 246:	02 96       	adiw	r24, 0x02	; 2
 248:	fc 01       	movw	r30, r24
 24a:	e7 57       	subi	r30, 0x77	; 119
 24c:	fd 4f       	sbci	r31, 0xFD	; 253
 24e:	80 81       	ld	r24, Z
 250:	88 2f       	mov	r24, r24
 252:	90 e0       	ldi	r25, 0x00	; 0
 254:	0d 80       	ldd	r0, Y+5	; 0x05
 256:	02 c0       	rjmp	.+4      	; 0x25c <main+0xf0>
 258:	95 95       	asr	r25
 25a:	87 95       	ror	r24
 25c:	0a 94       	dec	r0
 25e:	e2 f7       	brpl	.-8      	; 0x258 <main+0xec>
 260:	22 e0       	ldi	r18, 0x02	; 2
 262:	30 e0       	ldi	r19, 0x00	; 0
 264:	b9 01       	movw	r22, r18
 266:	0e 94 03 03 	call	0x606	; 0x606 <__divmodhi4>
 26a:	88 0f       	add	r24, r24
 26c:	99 1f       	adc	r25, r25
 26e:	82 95       	swap	r24
 270:	92 95       	swap	r25
 272:	90 7f       	andi	r25, 0xF0	; 240
 274:	98 27       	eor	r25, r24
 276:	80 7f       	andi	r24, 0xF0	; 240
 278:	98 27       	eor	r25, r24
 27a:	80 2b       	or	r24, r16
 27c:	91 2b       	or	r25, r17
 27e:	9c 83       	std	Y+4, r25	; 0x04
 280:	8b 83       	std	Y+3, r24	; 0x03
B=( B&0b11101111)|(((P[3+j]>>term)%2)<<4);
 282:	8b 81       	ldd	r24, Y+3	; 0x03
 284:	9c 81       	ldd	r25, Y+4	; 0x04
 286:	8c 01       	movw	r16, r24
 288:	0f 7e       	andi	r16, 0xEF	; 239
 28a:	10 70       	andi	r17, 0x00	; 0
 28c:	80 91 ef 03 	lds	r24, 0x03EF
 290:	90 91 f0 03 	lds	r25, 0x03F0
 294:	03 96       	adiw	r24, 0x03	; 3
 296:	fc 01       	movw	r30, r24
 298:	e7 57       	subi	r30, 0x77	; 119
 29a:	fd 4f       	sbci	r31, 0xFD	; 253
 29c:	80 81       	ld	r24, Z
 29e:	88 2f       	mov	r24, r24
 2a0:	90 e0       	ldi	r25, 0x00	; 0
 2a2:	0d 80       	ldd	r0, Y+5	; 0x05
 2a4:	02 c0       	rjmp	.+4      	; 0x2aa <main+0x13e>
 2a6:	95 95       	asr	r25
 2a8:	87 95       	ror	r24
 2aa:	0a 94       	dec	r0
 2ac:	e2 f7       	brpl	.-8      	; 0x2a6 <main+0x13a>
 2ae:	22 e0       	ldi	r18, 0x02	; 2
 2b0:	30 e0       	ldi	r19, 0x00	; 0
 2b2:	b9 01       	movw	r22, r18
 2b4:	0e 94 03 03 	call	0x606	; 0x606 <__divmodhi4>
 2b8:	82 95       	swap	r24
 2ba:	92 95       	swap	r25
 2bc:	90 7f       	andi	r25, 0xF0	; 240
 2be:	98 27       	eor	r25, r24
 2c0:	80 7f       	andi	r24, 0xF0	; 240
 2c2:	98 27       	eor	r25, r24
 2c4:	80 2b       	or	r24, r16
 2c6:	91 2b       	or	r25, r17
 2c8:	9c 83       	std	Y+4, r25	; 0x04
 2ca:	8b 83       	std	Y+3, r24	; 0x03
B=( B&0b11110111)|(((P[4+j]>>term)%2)<<3);
 2cc:	8b 81       	ldd	r24, Y+3	; 0x03
 2ce:	9c 81       	ldd	r25, Y+4	; 0x04
 2d0:	8c 01       	movw	r16, r24
 2d2:	07 7f       	andi	r16, 0xF7	; 247
 2d4:	10 70       	andi	r17, 0x00	; 0
 2d6:	80 91 ef 03 	lds	r24, 0x03EF
 2da:	90 91 f0 03 	lds	r25, 0x03F0
 2de:	04 96       	adiw	r24, 0x04	; 4
 2e0:	fc 01       	movw	r30, r24
 2e2:	e7 57       	subi	r30, 0x77	; 119
 2e4:	fd 4f       	sbci	r31, 0xFD	; 253
 2e6:	80 81       	ld	r24, Z
 2e8:	88 2f       	mov	r24, r24
 2ea:	90 e0       	ldi	r25, 0x00	; 0
 2ec:	0d 80       	ldd	r0, Y+5	; 0x05
 2ee:	02 c0       	rjmp	.+4      	; 0x2f4 <main+0x188>
 2f0:	95 95       	asr	r25
 2f2:	87 95       	ror	r24
 2f4:	0a 94       	dec	r0
 2f6:	e2 f7       	brpl	.-8      	; 0x2f0 <main+0x184>
 2f8:	22 e0       	ldi	r18, 0x02	; 2
 2fa:	30 e0       	ldi	r19, 0x00	; 0
 2fc:	b9 01       	movw	r22, r18
 2fe:	0e 94 03 03 	call	0x606	; 0x606 <__divmodhi4>
 302:	88 0f       	add	r24, r24
 304:	99 1f       	adc	r25, r25
 306:	88 0f       	add	r24, r24
 308:	99 1f       	adc	r25, r25
 30a:	88 0f       	add	r24, r24
 30c:	99 1f       	adc	r25, r25
 30e:	80 2b       	or	r24, r16
 310:	91 2b       	or	r25, r17
 312:	9c 83       	std	Y+4, r25	; 0x04
 314:	8b 83       	std	Y+3, r24	; 0x03
B=( B&0b11111011)|(((P[5+j]>>term)%2)<<2);
 316:	8b 81       	ldd	r24, Y+3	; 0x03
 318:	9c 81       	ldd	r25, Y+4	; 0x04
 31a:	8c 01       	movw	r16, r24
 31c:	0b 7f       	andi	r16, 0xFB	; 251
 31e:	10 70       	andi	r17, 0x00	; 0
 320:	80 91 ef 03 	lds	r24, 0x03EF
 324:	90 91 f0 03 	lds	r25, 0x03F0
 328:	05 96       	adiw	r24, 0x05	; 5
 32a:	fc 01       	movw	r30, r24
 32c:	e7 57       	subi	r30, 0x77	; 119
 32e:	fd 4f       	sbci	r31, 0xFD	; 253
 330:	80 81       	ld	r24, Z
 332:	88 2f       	mov	r24, r24
 334:	90 e0       	ldi	r25, 0x00	; 0
 336:	0d 80       	ldd	r0, Y+5	; 0x05
 338:	02 c0       	rjmp	.+4      	; 0x33e <main+0x1d2>
 33a:	95 95       	asr	r25
 33c:	87 95       	ror	r24
 33e:	0a 94       	dec	r0
 340:	e2 f7       	brpl	.-8      	; 0x33a <main+0x1ce>
 342:	22 e0       	ldi	r18, 0x02	; 2
 344:	30 e0       	ldi	r19, 0x00	; 0
 346:	b9 01       	movw	r22, r18
 348:	0e 94 03 03 	call	0x606	; 0x606 <__divmodhi4>
 34c:	88 0f       	add	r24, r24
 34e:	99 1f       	adc	r25, r25
 350:	88 0f       	add	r24, r24
 352:	99 1f       	adc	r25, r25
 354:	80 2b       	or	r24, r16
 356:	91 2b       	or	r25, r17
 358:	9c 83       	std	Y+4, r25	; 0x04
 35a:	8b 83       	std	Y+3, r24	; 0x03
B=( B&0b11111101)|(((P[6+j]>>term)%2)<<1);
 35c:	8b 81       	ldd	r24, Y+3	; 0x03
 35e:	9c 81       	ldd	r25, Y+4	; 0x04
 360:	8c 01       	movw	r16, r24
 362:	0d 7f       	andi	r16, 0xFD	; 253
 364:	10 70       	andi	r17, 0x00	; 0
 366:	80 91 ef 03 	lds	r24, 0x03EF
 36a:	90 91 f0 03 	lds	r25, 0x03F0
 36e:	06 96       	adiw	r24, 0x06	; 6
 370:	fc 01       	movw	r30, r24
 372:	e7 57       	subi	r30, 0x77	; 119
 374:	fd 4f       	sbci	r31, 0xFD	; 253
 376:	80 81       	ld	r24, Z
 378:	88 2f       	mov	r24, r24
 37a:	90 e0       	ldi	r25, 0x00	; 0
 37c:	0d 80       	ldd	r0, Y+5	; 0x05
 37e:	02 c0       	rjmp	.+4      	; 0x384 <main+0x218>
 380:	95 95       	asr	r25
 382:	87 95       	ror	r24
 384:	0a 94       	dec	r0
 386:	e2 f7       	brpl	.-8      	; 0x380 <main+0x214>
 388:	22 e0       	ldi	r18, 0x02	; 2
 38a:	30 e0       	ldi	r19, 0x00	; 0
 38c:	b9 01       	movw	r22, r18
 38e:	0e 94 03 03 	call	0x606	; 0x606 <__divmodhi4>
 392:	88 0f       	add	r24, r24
 394:	99 1f       	adc	r25, r25
 396:	80 2b       	or	r24, r16
 398:	91 2b       	or	r25, r17
 39a:	9c 83       	std	Y+4, r25	; 0x04
 39c:	8b 83       	std	Y+3, r24	; 0x03
B=( B&0b11111110)|(((P[7+j]>>term)%2)<<0);
 39e:	8b 81       	ldd	r24, Y+3	; 0x03
 3a0:	9c 81       	ldd	r25, Y+4	; 0x04
 3a2:	8c 01       	movw	r16, r24
 3a4:	0e 7f       	andi	r16, 0xFE	; 254
 3a6:	10 70       	andi	r17, 0x00	; 0
 3a8:	80 91 ef 03 	lds	r24, 0x03EF
 3ac:	90 91 f0 03 	lds	r25, 0x03F0
 3b0:	07 96       	adiw	r24, 0x07	; 7
 3b2:	fc 01       	movw	r30, r24
 3b4:	e7 57       	subi	r30, 0x77	; 119
 3b6:	fd 4f       	sbci	r31, 0xFD	; 253
 3b8:	80 81       	ld	r24, Z
 3ba:	88 2f       	mov	r24, r24
 3bc:	90 e0       	ldi	r25, 0x00	; 0
 3be:	0d 80       	ldd	r0, Y+5	; 0x05
 3c0:	02 c0       	rjmp	.+4      	; 0x3c6 <main+0x25a>
 3c2:	95 95       	asr	r25
 3c4:	87 95       	ror	r24
 3c6:	0a 94       	dec	r0
 3c8:	e2 f7       	brpl	.-8      	; 0x3c2 <main+0x256>
 3ca:	22 e0       	ldi	r18, 0x02	; 2
 3cc:	30 e0       	ldi	r19, 0x00	; 0
 3ce:	b9 01       	movw	r22, r18
 3d0:	0e 94 03 03 	call	0x606	; 0x606 <__divmodhi4>
 3d4:	80 2b       	or	r24, r16
 3d6:	91 2b       	or	r25, r17
 3d8:	9c 83       	std	Y+4, r25	; 0x04
 3da:	8b 83       	std	Y+3, r24	; 0x03

C=( C&0b1011111)|(((P[8+j]>>term)%2)<<5);
 3dc:	89 81       	ldd	r24, Y+1	; 0x01
 3de:	9a 81       	ldd	r25, Y+2	; 0x02
 3e0:	8c 01       	movw	r16, r24
 3e2:	0f 75       	andi	r16, 0x5F	; 95
 3e4:	10 70       	andi	r17, 0x00	; 0
 3e6:	80 91 ef 03 	lds	r24, 0x03EF
 3ea:	90 91 f0 03 	lds	r25, 0x03F0
 3ee:	08 96       	adiw	r24, 0x08	; 8
 3f0:	fc 01       	movw	r30, r24
 3f2:	e7 57       	subi	r30, 0x77	; 119
 3f4:	fd 4f       	sbci	r31, 0xFD	; 253
 3f6:	80 81       	ld	r24, Z
 3f8:	88 2f       	mov	r24, r24
 3fa:	90 e0       	ldi	r25, 0x00	; 0
 3fc:	0d 80       	ldd	r0, Y+5	; 0x05
 3fe:	02 c0       	rjmp	.+4      	; 0x404 <main+0x298>
 400:	95 95       	asr	r25
 402:	87 95       	ror	r24
 404:	0a 94       	dec	r0
 406:	e2 f7       	brpl	.-8      	; 0x400 <main+0x294>
 408:	22 e0       	ldi	r18, 0x02	; 2
 40a:	30 e0       	ldi	r19, 0x00	; 0
 40c:	b9 01       	movw	r22, r18
 40e:	0e 94 03 03 	call	0x606	; 0x606 <__divmodhi4>
 412:	88 0f       	add	r24, r24
 414:	99 1f       	adc	r25, r25
 416:	82 95       	swap	r24
 418:	92 95       	swap	r25
 41a:	90 7f       	andi	r25, 0xF0	; 240
 41c:	98 27       	eor	r25, r24
 41e:	80 7f       	andi	r24, 0xF0	; 240
 420:	98 27       	eor	r25, r24
 422:	80 2b       	or	r24, r16
 424:	91 2b       	or	r25, r17
 426:	9a 83       	std	Y+2, r25	; 0x02
 428:	89 83       	std	Y+1, r24	; 0x01
C=( C&0b1101111)|(((P[9+j]>>term)%2)<<4);
 42a:	89 81       	ldd	r24, Y+1	; 0x01
 42c:	9a 81       	ldd	r25, Y+2	; 0x02
 42e:	8c 01       	movw	r16, r24
 430:	0f 76       	andi	r16, 0x6F	; 111
 432:	10 70       	andi	r17, 0x00	; 0
 434:	80 91 ef 03 	lds	r24, 0x03EF
 438:	90 91 f0 03 	lds	r25, 0x03F0
 43c:	09 96       	adiw	r24, 0x09	; 9
 43e:	fc 01       	movw	r30, r24
 440:	e7 57       	subi	r30, 0x77	; 119
 442:	fd 4f       	sbci	r31, 0xFD	; 253
 444:	80 81       	ld	r24, Z
 446:	88 2f       	mov	r24, r24
 448:	90 e0       	ldi	r25, 0x00	; 0
 44a:	0d 80       	ldd	r0, Y+5	; 0x05
 44c:	02 c0       	rjmp	.+4      	; 0x452 <main+0x2e6>
 44e:	95 95       	asr	r25
 450:	87 95       	ror	r24
 452:	0a 94       	dec	r0
 454:	e2 f7       	brpl	.-8      	; 0x44e <main+0x2e2>
 456:	22 e0       	ldi	r18, 0x02	; 2
 458:	30 e0       	ldi	r19, 0x00	; 0
 45a:	b9 01       	movw	r22, r18
 45c:	0e 94 03 03 	call	0x606	; 0x606 <__divmodhi4>
 460:	82 95       	swap	r24
 462:	92 95       	swap	r25
 464:	90 7f       	andi	r25, 0xF0	; 240
 466:	98 27       	eor	r25, r24
 468:	80 7f       	andi	r24, 0xF0	; 240
 46a:	98 27       	eor	r25, r24
 46c:	80 2b       	or	r24, r16
 46e:	91 2b       	or	r25, r17
 470:	9a 83       	std	Y+2, r25	; 0x02
 472:	89 83       	std	Y+1, r24	; 0x01
C=( C&0b1110111)|(((P[10+j]>>term)%2)<<3);
 474:	89 81       	ldd	r24, Y+1	; 0x01
 476:	9a 81       	ldd	r25, Y+2	; 0x02
 478:	8c 01       	movw	r16, r24
 47a:	07 77       	andi	r16, 0x77	; 119
 47c:	10 70       	andi	r17, 0x00	; 0
 47e:	80 91 ef 03 	lds	r24, 0x03EF
 482:	90 91 f0 03 	lds	r25, 0x03F0
 486:	0a 96       	adiw	r24, 0x0a	; 10
 488:	fc 01       	movw	r30, r24
 48a:	e7 57       	subi	r30, 0x77	; 119
 48c:	fd 4f       	sbci	r31, 0xFD	; 253
 48e:	80 81       	ld	r24, Z
 490:	88 2f       	mov	r24, r24
 492:	90 e0       	ldi	r25, 0x00	; 0
 494:	0d 80       	ldd	r0, Y+5	; 0x05
 496:	02 c0       	rjmp	.+4      	; 0x49c <__stack+0x3d>
 498:	95 95       	asr	r25
 49a:	87 95       	ror	r24
 49c:	0a 94       	dec	r0
 49e:	e2 f7       	brpl	.-8      	; 0x498 <__stack+0x39>
 4a0:	22 e0       	ldi	r18, 0x02	; 2
 4a2:	30 e0       	ldi	r19, 0x00	; 0
 4a4:	b9 01       	movw	r22, r18
 4a6:	0e 94 03 03 	call	0x606	; 0x606 <__divmodhi4>
 4aa:	88 0f       	add	r24, r24
 4ac:	99 1f       	adc	r25, r25
 4ae:	88 0f       	add	r24, r24
 4b0:	99 1f       	adc	r25, r25
 4b2:	88 0f       	add	r24, r24
 4b4:	99 1f       	adc	r25, r25
 4b6:	80 2b       	or	r24, r16
 4b8:	91 2b       	or	r25, r17
 4ba:	9a 83       	std	Y+2, r25	; 0x02
 4bc:	89 83       	std	Y+1, r24	; 0x01
C=( C&0b1111011)|(((P[11+j]>>term)%2)<<2);
 4be:	89 81       	ldd	r24, Y+1	; 0x01
 4c0:	9a 81       	ldd	r25, Y+2	; 0x02
 4c2:	8c 01       	movw	r16, r24
 4c4:	0b 77       	andi	r16, 0x7B	; 123
 4c6:	10 70       	andi	r17, 0x00	; 0
 4c8:	80 91 ef 03 	lds	r24, 0x03EF
 4cc:	90 91 f0 03 	lds	r25, 0x03F0
 4d0:	0b 96       	adiw	r24, 0x0b	; 11
 4d2:	fc 01       	movw	r30, r24
 4d4:	e7 57       	subi	r30, 0x77	; 119
 4d6:	fd 4f       	sbci	r31, 0xFD	; 253
 4d8:	80 81       	ld	r24, Z
 4da:	88 2f       	mov	r24, r24
 4dc:	90 e0       	ldi	r25, 0x00	; 0
 4de:	0d 80       	ldd	r0, Y+5	; 0x05
 4e0:	02 c0       	rjmp	.+4      	; 0x4e6 <__stack+0x87>
 4e2:	95 95       	asr	r25
 4e4:	87 95       	ror	r24
 4e6:	0a 94       	dec	r0
 4e8:	e2 f7       	brpl	.-8      	; 0x4e2 <__stack+0x83>
 4ea:	22 e0       	ldi	r18, 0x02	; 2
 4ec:	30 e0       	ldi	r19, 0x00	; 0
 4ee:	b9 01       	movw	r22, r18
 4f0:	0e 94 03 03 	call	0x606	; 0x606 <__divmodhi4>
 4f4:	88 0f       	add	r24, r24
 4f6:	99 1f       	adc	r25, r25
 4f8:	88 0f       	add	r24, r24
 4fa:	99 1f       	adc	r25, r25
 4fc:	80 2b       	or	r24, r16
 4fe:	91 2b       	or	r25, r17
 500:	9a 83       	std	Y+2, r25	; 0x02
 502:	89 83       	std	Y+1, r24	; 0x01
C=( C&0b1111101)|(((P[12+j]>>term)%2)<<1);
 504:	89 81       	ldd	r24, Y+1	; 0x01
 506:	9a 81       	ldd	r25, Y+2	; 0x02
 508:	8c 01       	movw	r16, r24
 50a:	0d 77       	andi	r16, 0x7D	; 125
 50c:	10 70       	andi	r17, 0x00	; 0
 50e:	80 91 ef 03 	lds	r24, 0x03EF
 512:	90 91 f0 03 	lds	r25, 0x03F0
 516:	0c 96       	adiw	r24, 0x0c	; 12
 518:	fc 01       	movw	r30, r24
 51a:	e7 57       	subi	r30, 0x77	; 119
 51c:	fd 4f       	sbci	r31, 0xFD	; 253
 51e:	80 81       	ld	r24, Z
 520:	88 2f       	mov	r24, r24
 522:	90 e0       	ldi	r25, 0x00	; 0
 524:	0d 80       	ldd	r0, Y+5	; 0x05
 526:	02 c0       	rjmp	.+4      	; 0x52c <__stack+0xcd>
 528:	95 95       	asr	r25
 52a:	87 95       	ror	r24
 52c:	0a 94       	dec	r0
 52e:	e2 f7       	brpl	.-8      	; 0x528 <__stack+0xc9>
 530:	22 e0       	ldi	r18, 0x02	; 2
 532:	30 e0       	ldi	r19, 0x00	; 0
 534:	b9 01       	movw	r22, r18
 536:	0e 94 03 03 	call	0x606	; 0x606 <__divmodhi4>
 53a:	88 0f       	add	r24, r24
 53c:	99 1f       	adc	r25, r25
 53e:	80 2b       	or	r24, r16
 540:	91 2b       	or	r25, r17
 542:	9a 83       	std	Y+2, r25	; 0x02
 544:	89 83       	std	Y+1, r24	; 0x01
C=( C&0b1111110)|(((P[13+j]>>term)%2)<<0);
 546:	89 81       	ldd	r24, Y+1	; 0x01
 548:	9a 81       	ldd	r25, Y+2	; 0x02
 54a:	8c 01       	movw	r16, r24
 54c:	0e 77       	andi	r16, 0x7E	; 126
 54e:	10 70       	andi	r17, 0x00	; 0
 550:	80 91 ef 03 	lds	r24, 0x03EF
 554:	90 91 f0 03 	lds	r25, 0x03F0
 558:	0d 96       	adiw	r24, 0x0d	; 13
 55a:	fc 01       	movw	r30, r24
 55c:	e7 57       	subi	r30, 0x77	; 119
 55e:	fd 4f       	sbci	r31, 0xFD	; 253
 560:	80 81       	ld	r24, Z
 562:	88 2f       	mov	r24, r24
 564:	90 e0       	ldi	r25, 0x00	; 0
 566:	0d 80       	ldd	r0, Y+5	; 0x05
 568:	02 c0       	rjmp	.+4      	; 0x56e <__stack+0x10f>
 56a:	95 95       	asr	r25
 56c:	87 95       	ror	r24
 56e:	0a 94       	dec	r0
 570:	e2 f7       	brpl	.-8      	; 0x56a <__stack+0x10b>
 572:	22 e0       	ldi	r18, 0x02	; 2
 574:	30 e0       	ldi	r19, 0x00	; 0
 576:	b9 01       	movw	r22, r18
 578:	0e 94 03 03 	call	0x606	; 0x606 <__divmodhi4>
 57c:	80 2b       	or	r24, r16
 57e:	91 2b       	or	r25, r17
 580:	9a 83       	std	Y+2, r25	; 0x02
 582:	89 83       	std	Y+1, r24	; 0x01
PORTD=~(1<<term);
 584:	e2 e3       	ldi	r30, 0x32	; 50
 586:	f0 e0       	ldi	r31, 0x00	; 0
 588:	81 e0       	ldi	r24, 0x01	; 1
 58a:	90 e0       	ldi	r25, 0x00	; 0
 58c:	0d 80       	ldd	r0, Y+5	; 0x05
 58e:	02 c0       	rjmp	.+4      	; 0x594 <__stack+0x135>
 590:	88 0f       	add	r24, r24
 592:	99 1f       	adc	r25, r25
 594:	0a 94       	dec	r0
 596:	e2 f7       	brpl	.-8      	; 0x590 <__stack+0x131>
 598:	80 95       	com	r24
 59a:	80 83       	st	Z, r24
PORTB=B;
 59c:	e8 e3       	ldi	r30, 0x38	; 56
 59e:	f0 e0       	ldi	r31, 0x00	; 0
 5a0:	8b 81       	ldd	r24, Y+3	; 0x03
 5a2:	80 83       	st	Z, r24
PORTC=C;
 5a4:	e5 e3       	ldi	r30, 0x35	; 53
 5a6:	f0 e0       	ldi	r31, 0x00	; 0
 5a8:	89 81       	ldd	r24, Y+1	; 0x01
 5aa:	80 83       	st	Z, r24
// C=0b111111;


term++;
 5ac:	8d 81       	ldd	r24, Y+5	; 0x05
 5ae:	9e 81       	ldd	r25, Y+6	; 0x06
 5b0:	01 96       	adiw	r24, 0x01	; 1
 5b2:	9e 83       	std	Y+6, r25	; 0x06
 5b4:	8d 83       	std	Y+5, r24	; 0x05
if(term>7)term=0;
 5b6:	8d 81       	ldd	r24, Y+5	; 0x05
 5b8:	9e 81       	ldd	r25, Y+6	; 0x06
 5ba:	88 30       	cpi	r24, 0x08	; 8
 5bc:	91 05       	cpc	r25, r1
 5be:	14 f0       	brlt	.+4      	; 0x5c4 <__stack+0x165>
 5c0:	1e 82       	std	Y+6, r1	; 0x06
 5c2:	1d 82       	std	Y+5, r1	; 0x05
k++;
 5c4:	80 91 ee 03 	lds	r24, 0x03EE
 5c8:	8f 5f       	subi	r24, 0xFF	; 255
 5ca:	80 93 ee 03 	sts	0x03EE, r24
if(k>254){k=0;j++;}
 5ce:	80 91 ee 03 	lds	r24, 0x03EE
 5d2:	8f 3f       	cpi	r24, 0xFF	; 255
 5d4:	59 f4       	brne	.+22     	; 0x5ec <__stack+0x18d>
 5d6:	10 92 ee 03 	sts	0x03EE, r1
 5da:	80 91 ef 03 	lds	r24, 0x03EF
 5de:	90 91 f0 03 	lds	r25, 0x03F0
 5e2:	01 96       	adiw	r24, 0x01	; 1
 5e4:	90 93 f0 03 	sts	0x03F0, r25
 5e8:	80 93 ef 03 	sts	0x03EF, r24
if(j>240){j=0;
 5ec:	80 91 ef 03 	lds	r24, 0x03EF
 5f0:	90 91 f0 03 	lds	r25, 0x03F0
 5f4:	81 3f       	cpi	r24, 0xF1	; 241
 5f6:	91 05       	cpc	r25, r1
 5f8:	08 f4       	brcc	.+2      	; 0x5fc <__stack+0x19d>
 5fa:	d1 cd       	rjmp	.-1118   	; 0x19e <main+0x32>
 5fc:	10 92 f0 03 	sts	0x03F0, r1
 600:	10 92 ef 03 	sts	0x03EF, r1
 604:	cc cd       	rjmp	.-1128   	; 0x19e <main+0x32>

00000606 <__divmodhi4>:
 606:	97 fb       	bst	r25, 7
 608:	09 2e       	mov	r0, r25
 60a:	07 26       	eor	r0, r23
 60c:	0a d0       	rcall	.+20     	; 0x622 <__divmodhi4_neg1>
 60e:	77 fd       	sbrc	r23, 7
 610:	04 d0       	rcall	.+8      	; 0x61a <__divmodhi4_neg2>
 612:	0c d0       	rcall	.+24     	; 0x62c <__udivmodhi4>
 614:	06 d0       	rcall	.+12     	; 0x622 <__divmodhi4_neg1>
 616:	00 20       	and	r0, r0
 618:	1a f4       	brpl	.+6      	; 0x620 <__divmodhi4_exit>

0000061a <__divmodhi4_neg2>:
 61a:	70 95       	com	r23
 61c:	61 95       	neg	r22
 61e:	7f 4f       	sbci	r23, 0xFF	; 255

00000620 <__divmodhi4_exit>:
 620:	08 95       	ret

00000622 <__divmodhi4_neg1>:
 622:	f6 f7       	brtc	.-4      	; 0x620 <__divmodhi4_exit>
 624:	90 95       	com	r25
 626:	81 95       	neg	r24
 628:	9f 4f       	sbci	r25, 0xFF	; 255
 62a:	08 95       	ret

0000062c <__udivmodhi4>:
 62c:	aa 1b       	sub	r26, r26
 62e:	bb 1b       	sub	r27, r27
 630:	51 e1       	ldi	r21, 0x11	; 17
 632:	07 c0       	rjmp	.+14     	; 0x642 <__udivmodhi4_ep>

00000634 <__udivmodhi4_loop>:
 634:	aa 1f       	adc	r26, r26
 636:	bb 1f       	adc	r27, r27
 638:	a6 17       	cp	r26, r22
 63a:	b7 07       	cpc	r27, r23
 63c:	10 f0       	brcs	.+4      	; 0x642 <__udivmodhi4_ep>
 63e:	a6 1b       	sub	r26, r22
 640:	b7 0b       	sbc	r27, r23

00000642 <__udivmodhi4_ep>:
 642:	88 1f       	adc	r24, r24
 644:	99 1f       	adc	r25, r25
 646:	5a 95       	dec	r21
 648:	a9 f7       	brne	.-22     	; 0x634 <__udivmodhi4_loop>
 64a:	80 95       	com	r24
 64c:	90 95       	com	r25
 64e:	bc 01       	movw	r22, r24
 650:	cd 01       	movw	r24, r26
 652:	08 95       	ret

00000654 <_exit>:
 654:	f8 94       	cli

00000656 <__stop_program>:
 656:	ff cf       	rjmp	.-2      	; 0x656 <__stop_program>
